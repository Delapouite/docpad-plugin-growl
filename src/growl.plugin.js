// Generated by CoffeeScript 1.6.3
var growl,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

growl = require('growl');

module.exports = function(BasePlugin) {
  var GrowlPlugin, _ref;
  return GrowlPlugin = (function(_super) {
    __extends(GrowlPlugin, _super);

    function GrowlPlugin() {
      _ref = GrowlPlugin.__super__.constructor.apply(this, arguments);
      return _ref;
    }

    GrowlPlugin.prototype.name = 'growl';

    GrowlPlugin.prototype.config = {
      enabled: true
    };

    GrowlPlugin.prototype.notify = function(message, opts) {
      return growl(message, opts);
    };

    return GrowlPlugin;

  })(BasePlugin);
};
